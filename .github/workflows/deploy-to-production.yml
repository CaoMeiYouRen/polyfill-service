name: Deploy to production
concurrency: production_environment
on:
  release:
    types: [created]
env:
  eu_app: origami-polyfill-service-eu
  us_app: origami-polyfill-service-us
  terraform_version: '1.1.7'
  terraform_working_dir: 'fastly/terraform/'
  fastly_vcl_service_id: 4E1GeTez3EFH3cnwfyMAog
  fastly_compute_service_id: 3AfcolkTD4KUfkrKGIYZ4T
  fastly_top_pops_config: 446GW5am9tyUvsz9qPQ1jW
  fastly_compute_edge_config: 0YxAHTtZA6o2U7ZKVcbbL1
  domain: cdn.polyfill.io
jobs:
  deploy-to-production:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3.1.0
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm ci
    - name: Set up Fastly CLI
      uses: fastly/compute-actions/setup@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - run: fastly compute build --package-name package
    - name: Remove the development and staging terraform configuration overrides
      run: rm -f terraform.tfstate fastly/terraform/dev_override.tf fastly/terraform/qa_override.tf fastly/terraform/domains_override.tf
    - uses: ./.github/actions/terraform
      with:
        fastly-api-token: ${{ secrets.FASTLY_API_KEY }}
        fastly_vcl_service_id: ${{ env.fastly_vcl_service_id }}
        fastly_compute_service_id: ${{ env.fastly_compute_service_id }}
        fastly_top_pops_config: ${{ env.fastly_top_pops_config }}
        fastly_compute_edge_config: "${{ env.fastly_compute_edge_config }}"

  create-change-log:
    needs: [deploy-to-production]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Financial-Times/change-api-action@v1
        name: Create new change log
        with:
          change-api-key: ${{ secrets.CHANGE_API_KEY }}
          system-code: "origami-polyfill-service"
          environment: prod
          slack-channels: "ft-changes,origami-deploys"
