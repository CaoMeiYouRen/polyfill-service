name: Deploy to staging and test
concurrency: staging_environment
on:
  push:
    branches: [ main ]
env:
  terraform_version: '1.1.7'
  terraform_working_dir: 'fastly/terraform/'
  fastly_vcl_service_id: 2l7QhcR5rkdg691tcdRTD7
  fastly_compute_service_id: 4cUBTkiSVlJnR8JPnLvt85
  fastly_top_pops_config: 4dfSlimwvlJELO6htcnGsi
  fastly_compute_edge_config: 52hxZN9sNy7jyAdvvGKekc
  domain: qa.polyfill.io
jobs:
  deploy-to-staging:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3.1.0
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm ci
    - name: Set up Fastly CLI
      uses: fastly/compute-actions/setup@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - run: fastly compute build --package-name package
    - name: Remove the development and production terraform configuration overrides
      run: rm -f terraform.tfstate fastly/terraform/dev_override.tf fastly/terraform/production_override.tf fastly/terraform/domains_override.tf
    - uses: ./.github/actions/terraform
      with:
        fastly-api-token: ${{ secrets.FASTLY_API_KEY }}
        fastly_vcl_service_id: ${{ env.fastly_vcl_service_id }}
        fastly_compute_service_id: ${{ env.fastly_compute_service_id }}
        fastly_top_pops_config: ${{ env.fastly_top_pops_config }}
        fastly_compute_edge_config: ${{ env.fastly_compute_edge_config }}

  end-to-end-test:
    needs: [deploy-to-staging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.1.0
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm ci
      - run: npm run test:integration
        env:
          HOST: "https://${{ env.domain }}"
